# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""스티커(스팟)을 순서대로 저장하고 있는 데이터 코스 정보"""
type Course {
  """Course id"""
  _id: String!

  """course의 image url"""
  courseImage: String!

  """list of sticker ids(순서 중요)"""
  is_share: Boolean!

  """list of sticker ids(순서 중요)"""
  stickers(populate: Boolean = false): [Sticker!]!
  title: String!
}

input CourseInput {
  """코스 id"""
  courseId: String!

  """course input을 채우면, 이미지 url을 생성하여 전달합니다."""
  courseImageInput: CreateCourseImageInput
}

input CreateCourseImageInput {
  """이미지 세로 사이즈"""
  height: Int = 700

  """이미지 테마"""
  theme: ImageThemeType = street

  """이미지 가로 사이즈"""
  width: Int = 700
}

input CreateCourseInput {
  is_share: Boolean!

  """list of sticker ids(순서 중요)"""
  stickers: [String!]!
  title: String!
}

"""커스텀 스팟 생성 input입니다. 테마는 category_group_name로 넣어주세요"""
input CreateCustomSpotInput {
  """커스텀 스팟의 테마입니다. (ex. 음식점, 공원)"""
  category_group_name: String!

  """커스텀 스팟 여부 지정, default true입니다."""
  is_custom: Boolean = true

  """커스텀 스팟 공개 여부 지정, default false입니다. 공개를 할 경우, 수정할 수 없습니다."""
  is_custom_share: Boolean = false
  place_name: String!
  x: Float!
  y: Float!
}

input CreateStickerInput {
  address_name: String
  category_group_code: String
  category_group_name: String
  category_name: String
  distance: String

  """Sticker가 코스 생성에 사용여부"""
  is_used: Boolean
  phone: String

  """카카오 Place id"""
  place_id: String!
  place_name: String!
  place_url: String
  road_address_name: String

  """스티커 번호, 0~11"""
  sticker_index: Int!

  """스티커 당도 퍼센트"""
  sweet_percent: Int!
  x: Float!
  y: Float!
}

type DeleteSpotDto {
  """the number of documents deleted. Equal to deletedCount."""
  n: Int!

  """1 if no errors occurred"""
  ok: Int!
}

"""스티커 번호(sticker_index)기반으로 그룹화된 스티커 Count 정보"""
type GroupedSticker {
  """스티커 번호, 0~11"""
  sticker_index: Int!

  """그룹에 포함된 스티커 총 갯수"""
  total_count: Int!
}

enum ImageThemeType {
  dark
  light
  street
}

"""SortType은 정확도(accuracy)가 기본이며, 거리순(distance) 정렬을 원할 경우 x,y는 필수 입니다."""
input KeywordSearchDto {
  category_group_code: String

  """결과 페이지 번호"""
  page: Int = 1
  query: String!
  radius: Int
  rect: String

  """한 페이지에 보여질 문서의 개수, 1~15 사이의 값"""
  size: Int = 15
  sort: SortType
  x: Float
  y: Float
}

type Mutation {
  """Sticker를 사용하여 코스를 생성합니다. 이때 코스의 순서는 전달된 스티커들의 순서로 처리됩니다."""
  createCourse(createCourseInput: CreateCourseInput!): Course!

  """커스텀 스팟을 생성합니다."""
  createCustomSpot(createCustomSpotInput: CreateCustomSpotInput!): Spot!
  createSticker(createStickerInput: CreateStickerInput!): Sticker!

  """dummy 데이터를 생성합니다."""
  dummy(keyword: String!): Int!

  """
  커스텀 스팟을 삭제합니다. is_custom==true && is_custom_share==false && created_by==current_user 때만 삭제 가능
  """
  removeCustomSpot(spotId: String!): DeleteSpotDto!

  """(For Debugging) 스팟을 삭제합니다"""
  removeSpot(spotId: String!): DeleteSpotDto!

  """
  커스텀 스팟을 업데이트합니다. 정책상 is_custom==true && is_custom_share==false && created_by==current_user 때만 삭제 가능
  """
  updateCustomSpot(updateCustomSpotInput: UpdateCustomSpotInput!): Spot!
  updateSticker(updateStickerInput: UpdateStickerInput!): Sticker!
}

"""페이지네이션 Place 정보"""
type PaginatedPlace {
  """현재 페이지 번호"""
  cur_page: Int!

  """현재 페이지가 마지막 페이지인지 여부, 값이 false면 page를 증가시켜 다음 페이지를 요청할 수 있음"""
  is_end: Boolean!

  """카카오 장소 정보들"""
  places: [Place!]!

  """검색된 문서 수"""
  total_count: Int!

  """
  페이지 수(카카오 api가 최대 45개의 문서만 검색 가능하기 때문에 total_count와 매칭되지 않을 수 있다. https://devtalk.kakao.com/t/pageable-count/88418)
  """
  total_page_count: Int!
}

"""페이지네이션 정보를 포함한 spot 정보"""
type PaginatedSpot {
  """현재 페이지 번호"""
  cur_page: Int!

  """현재 페이지가 마지막 페이지인지 여부, 값이 false면 page를 증가시켜 다음 페이지를 요청할 수 있음"""
  is_end: Boolean!

  """Spot 정보들"""
  spots: [Spot!]!

  """검색된 문서 수"""
  total_count: Int!

  """
  페이지 수(카카오 api가 최대 45개의 문서만 검색 가능하기 때문에 total_count와 매칭되지 않을 수 있다. https://devtalk.kakao.com/t/pageable-count/88418)
  """
  total_page_count: Int!
}

"""카카오 지도 api로 부터 받은 위치 정보"""
type Place {
  address_name: String
  category_group_code: String
  category_group_name: String
  category_name: String
  distance: String

  """kakao place id"""
  id: String!
  phone: String
  place_name: String!
  place_url: String
  road_address_name: String
  x: Float
  y: Float
}

type Query {
  """a Course"""
  course(courseInput: CourseInput!): Course!
  courses: [Course!]!

  """근처에 있는 spot을 검색합니다."""
  getNearSpots(searchSpotDto: SearchNearSpotDto): PaginatedSpot!

  """
  키워드로 위치 정보를 확인합니다. 
  내부적으로 카카오 API를 요청합니다.
  """
  places(keywordSearchDto: KeywordSearchDto!): PaginatedPlace!

  """스팟을 반환합니다."""
  spot(spotId: String!): Spot!

  """스팟들을 반환합니다."""
  spots(searchSpotDto: SearchSpotDto): PaginatedSpot!
  sticker(id: String!): Sticker!
  stickers: [Sticker!]!
}

"""주어진 x,y 기준으로 근처 spot을 검색합니다."""
input SearchNearSpotDto {
  """비워질 경우 x,y 기준으로만 검색됩니다."""
  keyword: String

  """결과 페이지 번호"""
  page: Int = 1

  """
  단위 meter, 0~20000 사이의 값으로 중심 좌표부터의 반경거리. 특정 지역을 중심으로 검색하려고 할 경우 중심좌표로 쓰일 x,y와 함께 사용.
  """
  radius: Int = 1000

  """한 페이지에 보여질 문서의 개수, 1~15 사이의 값"""
  size: Int = 100
  x: Float
  y: Float
}

"""키워드 기반으로 spot을 검색합니다. """
input SearchSpotDto {
  """비워질 경우 필터링 없이 검색됩니다."""
  keyword: String

  """결과 페이지 번호"""
  page: Int = 1

  """한 페이지에 보여질 문서의 개수, 1~15 사이의 값"""
  size: Int = 100
}

enum SortType {
  accuracy
  distance
}

"""Emoji를 포함한 유저데이터를 포함하여, mongodb에 저장시킬 장소 데이터"""
type Spot {
  """Spot id"""
  _id: String!
  address_name: String
  category_group_code: String
  category_group_name: String
  category_name: String
  distance: String

  """스티커 index에 따라서 그룹된 정보를 자세히 받아올 수 있습니다."""
  groupedSticker: GroupedSticker!
  is_custom: Boolean
  is_custom_share: Boolean
  phone: String

  """kakao place id"""
  place_id: String!
  place_name: String!
  place_url: String
  road_address_name: String

  """list of stickers"""
  stickers(populate: Boolean = false): [Sticker!]!
  x: Float
  y: Float
}

"""'이모지 스티커'로 코스 생성에 기본적으로 사용되는 단위입니다."""
type Sticker {
  """Sticker id"""
  _id: String!

  """Sticker가 코스 생성에 사용여부"""
  is_used: Boolean!

  """스티커가 붙여진 Spot id 또는 Spot 객체값"""
  spot(populate: Boolean!): Spot

  """스티커 번호, 0~11"""
  sticker_index: Int!

  """스티커 당도 퍼센트"""
  sweet_percent: Int!
}

"""커스텀 스팟 업데이트 input입니다. is_custom_share이 false일 경우에만 동작합니다."""
input UpdateCustomSpotInput {
  """Custom Spot id"""
  _id: String!

  """커스텀 스팟의 테마입니다. (ex. 음식점, 공원)"""
  category_group_name: String

  """커스텀 스팟 여부 지정, default true입니다."""
  is_custom: Boolean = true

  """커스텀 스팟 공개 여부 지정, default false입니다. 공개를 할 경우, 수정할 수 없습니다."""
  is_custom_share: Boolean = false
  place_name: String
  x: Float
  y: Float
}

input UpdateStickerInput {
  """Sticker id"""
  _id: String!

  """Sticker가 코스 생성에 사용여부"""
  is_used: Boolean
}
